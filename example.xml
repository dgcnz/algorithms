<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.20" xml:lang="en-US">
  <compounddef id="101498D-counting-paths_8cpp" kind="file" language="C++">
    <compoundname>101498D-counting-paths.cpp</compoundname>
    <includes local="no">bits/stdc++.h</includes>
    <incdepgraph>
      <node id="2">
        <label>bits/stdc++.h</label>
      </node>
      <node id="1">
        <label>/home/dgcnz/development/algorithms/competitive-programming/codeforces/101498D-counting-paths.cpp</label>
        <link refid="101498D-counting-paths_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innerclass refid="classNumMod" prot="public">NumMod</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="101498D-counting-paths_8cpp_1a9abe2d36ce47aa9f1eea9b32b693d533" prot="public" static="no">
        <name>all</name>
        <param><defname>c</defname></param>
        <initializer>begin(c), end(c)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dgcnz/development/algorithms/competitive-programming/codeforces/101498D-counting-paths.cpp" line="35" column="11" bodyfile="/home/dgcnz/development/algorithms/competitive-programming/codeforces/101498D-counting-paths.cpp" bodystart="35" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="101498D-counting-paths_8cpp_1a516f178ec2ea66382a9a4fdb1e219442" prot="public" static="no">
        <name>isz</name>
        <param><defname>c</defname></param>
        <initializer>(int)(c).size()</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dgcnz/development/algorithms/competitive-programming/codeforces/101498D-counting-paths.cpp" line="36" column="9" bodyfile="/home/dgcnz/development/algorithms/competitive-programming/codeforces/101498D-counting-paths.cpp" bodystart="36" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="101498D-counting-paths_8cpp_1ad54dde638d1ae3e9bb08956f539b1883" prot="public" static="no">
        <type>long long</type>
        <definition>using ll =  long long</definition>
        <argsstring></argsstring>
        <name>ll</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dgcnz/development/algorithms/competitive-programming/codeforces/101498D-counting-paths.cpp" line="39" column="1" bodyfile="/home/dgcnz/development/algorithms/competitive-programming/codeforces/101498D-counting-paths.cpp" bodystart="39" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="101498D-counting-paths_8cpp_1a6a76b90ed1ce00cd85f1fb441f0e247f" prot="public" static="no">
        <type>pair&lt; int, int &gt;</type>
        <definition>using ii =  pair&lt;int, int&gt;</definition>
        <argsstring></argsstring>
        <name>ii</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dgcnz/development/algorithms/competitive-programming/codeforces/101498D-counting-paths.cpp" line="40" column="1" bodyfile="/home/dgcnz/development/algorithms/competitive-programming/codeforces/101498D-counting-paths.cpp" bodystart="40" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="101498D-counting-paths_8cpp_1a06b68162ad05aef149b2c9b8eb878ec4" prot="public" static="no">
        <type>vector&lt; int &gt;</type>
        <definition>using vi =  vector&lt;int&gt;</definition>
        <argsstring></argsstring>
        <name>vi</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dgcnz/development/algorithms/competitive-programming/codeforces/101498D-counting-paths.cpp" line="41" column="1" bodyfile="/home/dgcnz/development/algorithms/competitive-programming/codeforces/101498D-counting-paths.cpp" bodystart="41" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="101498D-counting-paths_8cpp_1a0d2e609b6ced9080f3609dc2bda80d86" prot="public" static="no">
        <type>NumMod&lt; MOD, ll &gt;</type>
        <definition>using NM =  NumMod&lt;MOD, ll&gt;</definition>
        <argsstring></argsstring>
        <name>NM</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dgcnz/development/algorithms/competitive-programming/codeforces/101498D-counting-paths.cpp" line="77" column="1" bodyfile="/home/dgcnz/development/algorithms/competitive-programming/codeforces/101498D-counting-paths.cpp" bodystart="77" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="101498D-counting-paths_8cpp_1a05924f1b0bea25ca6b75a1294eb311fc" prot="public" static="no" mutable="no">
        <type>ll const</type>
        <definition>ll const MOD</definition>
        <argsstring></argsstring>
        <name>MOD</name>
        <initializer>= 1e9 + 7</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dgcnz/development/algorithms/competitive-programming/codeforces/101498D-counting-paths.cpp" line="75" column="11" bodyfile="/home/dgcnz/development/algorithms/competitive-programming/codeforces/101498D-counting-paths.cpp" bodystart="75" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="101498D-counting-paths_8cpp_1a96aae7cbec8dc7f6caefd0e2222b5f82" prot="public" static="no" mutable="no">
        <type>int const</type>
        <definition>int const NMAX</definition>
        <argsstring></argsstring>
        <name>NMAX</name>
        <initializer>= 1e5 + 11</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dgcnz/development/algorithms/competitive-programming/codeforces/101498D-counting-paths.cpp" line="76" column="11" bodyfile="/home/dgcnz/development/algorithms/competitive-programming/codeforces/101498D-counting-paths.cpp" bodystart="76" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="101498D-counting-paths_8cpp_1ac2b57e5efc5843b9b1ffb50c9470f740" prot="public" static="no" mutable="no">
        <type>NM</type>
        <definition>NM fact[NMAX]</definition>
        <argsstring>[NMAX]</argsstring>
        <name>fact</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dgcnz/development/algorithms/competitive-programming/codeforces/101498D-counting-paths.cpp" line="78" column="4" bodyfile="/home/dgcnz/development/algorithms/competitive-programming/codeforces/101498D-counting-paths.cpp" bodystart="78" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="101498D-counting-paths_8cpp_1ad6cc1fcfc0e49dfe5eb14aee38a2edda" prot="public" static="no" mutable="no">
        <type>NM</type>
        <definition>NM inv[NMAX]</definition>
        <argsstring>[NMAX]</argsstring>
        <name>inv</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dgcnz/development/algorithms/competitive-programming/codeforces/101498D-counting-paths.cpp" line="78" column="9" bodyfile="/home/dgcnz/development/algorithms/competitive-programming/codeforces/101498D-counting-paths.cpp" bodystart="78" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="101498D-counting-paths_8cpp_1a09752103d953b63752a77314e2fc36e7" prot="public" static="no" mutable="no">
        <type>NM</type>
        <definition>NM inv_fact[NMAX]</definition>
        <argsstring>[NMAX]</argsstring>
        <name>inv_fact</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dgcnz/development/algorithms/competitive-programming/codeforces/101498D-counting-paths.cpp" line="78" column="13" bodyfile="/home/dgcnz/development/algorithms/competitive-programming/codeforces/101498D-counting-paths.cpp" bodystart="78" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="101498D-counting-paths_8cpp_1a12dd363894c7ce1772ee0b047707b6d4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void precompute_fact</definition>
        <argsstring>(void)</argsstring>
        <name>precompute_fact</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dgcnz/development/algorithms/competitive-programming/codeforces/101498D-counting-paths.cpp" line="80" column="6" bodyfile="/home/dgcnz/development/algorithms/competitive-programming/codeforces/101498D-counting-paths.cpp" bodystart="80" bodyend="90"/>
      </memberdef>
      <memberdef kind="function" id="101498D-counting-paths_8cpp_1a2284ef3b0ab9e71d9142340414804e63" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>T</type>
        <definition>T binpow</definition>
        <argsstring>(T a, ll b)</argsstring>
        <name>binpow</name>
        <param>
          <type>T</type>
          <declname>a</declname>
        </param>
        <param>
          <type>ll</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dgcnz/development/algorithms/competitive-programming/codeforces/101498D-counting-paths.cpp" line="92" column="3" bodyfile="/home/dgcnz/development/algorithms/competitive-programming/codeforces/101498D-counting-paths.cpp" bodystart="92" bodyend="103"/>
      </memberdef>
      <memberdef kind="function" id="101498D-counting-paths_8cpp_1ab8e7408eca53e18975b86e46d3fab01f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NM</type>
        <definition>NM inverse</definition>
        <argsstring>(NM const &amp;y)</argsstring>
        <name>inverse</name>
        <param>
          <type>NM const &amp;</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dgcnz/development/algorithms/competitive-programming/codeforces/101498D-counting-paths.cpp" line="104" column="4" bodyfile="/home/dgcnz/development/algorithms/competitive-programming/codeforces/101498D-counting-paths.cpp" bodystart="104" bodyend="104"/>
      </memberdef>
      <memberdef kind="function" id="101498D-counting-paths_8cpp_1a0c0636636618b0bca842c903f7d50319" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ll</type>
        <definition>ll C</definition>
        <argsstring>(int n, int k)</argsstring>
        <name>C</name>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <param>
          <type>int</type>
          <declname>k</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dgcnz/development/algorithms/competitive-programming/codeforces/101498D-counting-paths.cpp" line="105" column="4" bodyfile="/home/dgcnz/development/algorithms/competitive-programming/codeforces/101498D-counting-paths.cpp" bodystart="105" bodyend="111"/>
      </memberdef>
      <memberdef kind="function" id="101498D-counting-paths_8cpp_1a840291bc02cba5474a4cb46a9b9566fe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int main</definition>
        <argsstring>(void)</argsstring>
        <name>main</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/dgcnz/development/algorithms/competitive-programming/codeforces/101498D-counting-paths.cpp" line="113" column="5" bodyfile="/home/dgcnz/development/algorithms/competitive-programming/codeforces/101498D-counting-paths.cpp" bodystart="113" bodyend="126"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><verbatim>             https://codeforces.com/gym/101498/problem/D
</verbatim> <simplesect kind="par"><title>Tags</title><para>math, combinatorics</para>
</simplesect>
<verbatim>           AC
</verbatim> <simplesect kind="par"><title>Score</title><para>4 </para>
</simplesect>
<simplesect kind="par"><title>Difficulty</title><para>4 </para>
</simplesect>
<simplesect kind="par"><title>Editorial</title><para>no</para>
</simplesect>
<verbatim>     3
</verbatim> <simplesect kind="par"><title>Thinking Time</title><para>30 </para>
</simplesect>
<simplesect kind="par"><title>Coding Time</title><para>5 </para>
</simplesect>
<simplesect kind="par"><title>Debug Time</title><para>5</para>
</simplesect>
<verbatim>  [O(f(n)))
</verbatim> <simplesect kind="par"><title>Memory Complexity</title><para>[O(f(n))] </para>
</simplesect>
<simplesect kind="par"><title>Idea</title>
    <para><itemizedlist>
            <listitem><para>A path in a binary tree can be described by a sequence of l&apos;s and r&apos;s.</para></listitem>
            <listitem><para>We need to count such $a$-sized sequences such that they change $b$ times.</para></listitem>
            <listitem><para>Without loss of generality, such string is of the form: $LRLRLR...LR$, where $L$ and $R$ are blocks of &apos;l&apos;s and &apos;r&apos;s respectively, with a total of $b+1$ blocks and sum of block sizes equal to $a$.</para></listitem>
            <listitem><para>This probem can be thought as finding all the solutions to the equation: $$x_1 + x_2 + ... + x_{b + 1} = a$$</para></listitem>
            <listitem><para>Where $x_i &gt;= 1$.</para></listitem>
            <listitem><para>This is the stars and bars problem, to which a direct formula is known. </para></listitem>
    </itemizedlist></para>
</simplesect>
</para>
    </detaileddescription>
    <location file="/home/dgcnz/development/algorithms/competitive-programming/codeforces/101498D-counting-paths.cpp"/>
  </compounddef>
</doxygen>
